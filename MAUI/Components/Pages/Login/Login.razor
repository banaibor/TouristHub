@page "/"

@using System.Net.Http.Json

@inject HttpClient Http
@inject NavigationManager Navigation

<PageTitle>Login</PageTitle>

<h3>User Login</h3>

<EditForm Model="loginModel" OnValidSubmit="HandleLogin" FormName="LoginForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label for="email" class="form-label">Email</label>
        <InputText id="email" type="email" class="form-control" @bind-Value="loginModel.Email" />
    </div>
    <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
    </div>
    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-3">@message</div>
}

@code {
    private LoginModel loginModel = new();
    private string? message;

    private async Task HandleLogin()
    {
        var response = await Http.PostAsJsonAsync("/api/Account/login", loginModel);
        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResult>();
            message = "Login successful!";
            if (result is not null)
            {
                switch (result.Role?.ToUpperInvariant())
                {
                    case "ADMIN":
                        Navigation.NavigateTo("/admin/dashboards/dashboard");
                        break;
                    case "MANAGER":
                        Navigation.NavigateTo("/manager/dashboards/dashboard");
                        break;
                    default:
                        Navigation.NavigateTo("/user/dashboards/dashboard");
                        break;
                }
            }
        }
        else
        {
            var error = await response.Content.ReadAsStringAsync();
            message = $"Login failed: {error}";
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
    }

    public class LoginResult
    {
        public string? Message { get; set; }
        public string? Role { get; set; }
    }
}
